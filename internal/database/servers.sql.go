// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: servers.sql

package database

import (
	"context"
	"time"
)

const createServer = `-- name: CreateServer :one
INSERT INTO servers (id, created_at, updated_at)
VALUES (
    $1,
    $2,
    $3
)
RETURNING id, created_at, updated_at
`

type CreateServerParams struct {
	ID        string
	CreatedAt time.Time
	UpdatedAt time.Time
}

func (q *Queries) CreateServer(ctx context.Context, arg CreateServerParams) (Server, error) {
	row := q.db.QueryRowContext(ctx, createServer, arg.ID, arg.CreatedAt, arg.UpdatedAt)
	var i Server
	err := row.Scan(&i.ID, &i.CreatedAt, &i.UpdatedAt)
	return i, err
}

const getServer = `-- name: GetServer :one
SELECT id, created_at, updated_at
FROM servers
WHERE id = $1
`

func (q *Queries) GetServer(ctx context.Context, id string) (Server, error) {
	row := q.db.QueryRowContext(ctx, getServer, id)
	var i Server
	err := row.Scan(&i.ID, &i.CreatedAt, &i.UpdatedAt)
	return i, err
}
